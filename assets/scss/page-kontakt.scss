@import "_variables";

main.contact_page {
    .contact_form {
        margin-bottom: 6em;

        p {
            color: map-get($colors, "darker-gray");
            font-size: 1.25rem;

            &.margin {
                margin: 1.5em 0;

                @media only screen and (min-width: map-get($breakpoints, "md")) {
                    margin: 1.75em 0;
                }
            }

            &.one_field,
            &.two_fields {
                row-gap: .75em;
                display: grid;

                @media only screen and (min-width: map-get($breakpoints, "md")) {
                    row-gap: 1em;
                }

                @media only screen and (min-width: map-get($breakpoints, "lg")) {
                    align-items: center;
                }
            }

            &.one_field {
                grid-template: auto auto / 100%;

                @media only screen and (min-width: map-get($breakpoints, "lg")) {
                    column-gap: 1.5em;
                    grid-template: 1fr / auto 1fr;
                }

                @media only screen and (min-width: map-get($breakpoints, "xl")) {
                    grid-template: 1fr / auto 25em 1fr;
                }
            }
    
            &.two_fields {
                grid-template: auto auto auto / 100%;
    
                @media only screen and (min-width: map-get($breakpoints, "sm")) {
                    column-gap: 1em;
                    grid-template: auto auto / 1fr 1fr;
    
                    input:first-child {
                        grid-area: 2/1/2/1;
                    }
    
                    input:last-child {
                        grid-area: 2/2/2/2;
                    }
                }

                @media only screen and (min-width: map-get($breakpoints, "lg")) {
                    column-gap: 1.5em;
                    grid-template: 1fr / auto 1fr 1fr;

                    input:first-child {
                        grid-area: 1/2/1/2;
                    }
    
                    input:last-child {
                        grid-area: 1/3/1/3;
                    }
                }

                @media only screen and (min-width: map-get($breakpoints, "xl")) {
                    grid-template: 1fr / auto 15em 15em 1fr;
                }
            }

            @media only screen and (min-width: map-get($breakpoints, "lg")) {
                font-size: 1.35rem;
            }

            @media only screen and (min-width: map-get($breakpoints, "xl")) {
                font-size: 1.5rem;
            }
        }

        section {
            margin: 3em 0;

            p#services_error {
                display: none;
                margin-top: 1.25em;
                color: map-get($colors, "red");
                font-size: 1.15rem;
                transition: opacity 200ms ease-in-out;

                &.hidden {
                    display: none;
                }

                &.visible {
                    display: block;
                }
            }

            &.consent_checkbox {
                gap: 0.75em;
                display: flex;
                align-items: center;

                .checkbox {
                    position: relative;

                    .checkbox_validation {
                        width: 1.5em;
                        height: 1.5em;
                        display: none;
                        position: absolute;
                        top: 50%;
                        left: 50%;
                        transform: translate(-50%, -50%);
                        z-index: 1;
                        grid-area: 1/1/1/1;
                        border: 2px solid map-get($colors, "red");
                        border-radius: 4px;
                    }

                    input#consent.error~.checkbox_validation {
                        display: block;
                    }
                }

                label {
                    color: map-get($colors, "darker-gray");
                    cursor: pointer;

                    @media only screen and (min-width: map-get($breakpoints, "xl")) {
                        font-size: 1.15rem;
                    }
                }
            }
        }

        .services {
            row-gap: 1em;
            column-gap: 1.5em;
            display: flex;
            flex-wrap: wrap;
            margin-top: 1.5em;

            .service {
                display: inline-block;
                position: relative;
                overflow: hidden;
                padding: 1em;
                border-radius: 50px;
                background-color: map-get($colors, "lightgray");
                color: map-get($colors, "black");
                font-size: 1.25rem;
                transition: 400ms;
                -webkit-mask-image: -webkit-radial-gradient(map-get($colors, "white"), map-get($colors, "black"));
                cursor: pointer;

                &:hover::after {
                    transform: translateX(0);
                }

                &::after {
                    content: "";
                    position: absolute;
                    top: 0;
                    left: 0;
                    background: map-get($colors, "gray");
                    width: 100%;
                    height: 100%;
                    border-radius: 50px;
                    transform: translateX(-100%);
                    z-index: 0;
                    transition: 400ms;
                }

                &[data-selected=true] {
                    color: map-get($colors, "white");
                    background-color: map-get($colors, "black");

                    &::after {
                        background: map-get($colors, "black");
                    }
                }

                span {
                    position: relative;
                    z-index: 1;
                }

                @media only screen and (min-width: map-get($breakpoints, "lg")) {
                    font-size: 1.3rem;
                }

                @media only screen and (min-width: map-get($breakpoints, "xl")) {
                    gap: 2em;
                }
            }
        }

        input[type=text],
        input[type=email] {
            width: 100%;
            padding: .75em 1.5em;
            border: 2px solid map-get($colors, "lightgray");
            border-radius: 10em;
            background-color: map-get($colors, "lightgray");
            font-family: $font;
            font-size: 1.3rem;
            transition: border 100ms ease-in-out;

            &.error {
                border: 2px solid map-get($colors, "red");
            }

            &.success {
                border: 2px solid map-get($colors, "green");
            }

            &:focus {
                outline: none;
            }
            
            @media only screen and (max-width: 35.9999em) {
                &#company::placeholder {
                    font-size: 1rem;
                }
            }
        }

        #message_wrapper {
            display: grid;
            grid-template: 1fr / 100%;

            * {
                grid-area: 1/1/1/1;
            }

            &::after {
                content: attr(data-replicated-value) " ";
                white-space: pre-wrap;
                visibility: hidden;
                grid-area: 1/1/1/1;
            }

            textarea#message {
                resize: none;
                margin-top: .75em;
                //margin-top: 2em;
                border: 2px solid map-get($colors, "lightgray");
                border-radius: 1.5em;
                background-color: map-get($colors, "lightgray");
                white-space: break-spaces;
                font-family: $font;
                transition: border 100ms ease-in-out;

                &:focus {
                    outline: none;
                }

                &.error {
                    border: 2px solid map-get($colors, "red");
                }

                &.success {
                    border: 2px solid map-get($colors, "green");
                }

                @media only screen and (min-width: map-get($breakpoints, "lg")) {
                    margin-top: 1em;
                    border-radius: 2em;
                }
            }

            &::after,
            textarea#message {
                padding: 1em;
                font-size: 1.15rem;

                @media only screen and (min-width: map-get($breakpoints, "md")) {
                    padding: 1.5em;
                }

                @media only screen and (min-width: map-get($breakpoints, "lg")) {
                    padding: 2em;
                }
            }

            @media only screen and (min-width: map-get($breakpoints, "xl")) {
                grid-template: 1fr/ 55em 1fr;
            }
        }
    }

    button {
        border: 0;
        font-family: $font;
        font-size: 1.4rem;
        cursor: pointer;
    }
}